<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.adtec.daily.demand.dao.DemandDetailMapper" >
  <resultMap id="BaseResultMap" type="com.adtec.daily.demand.entity.DemandDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="demand_name" property="demandName" jdbcType="VARCHAR" />
    <result column="demand_des" property="demandDes" jdbcType="VARCHAR" />
    <result column="work_load" property="workLoad" jdbcType="DECIMAL" />
    <result column="demand_respo_id" property="demandRespoId" jdbcType="VARCHAR" />
    <result column="demand_percent" property="demandPercent" jdbcType="INTEGER" />
    <result column="plan_date" property="planDate" jdbcType="DATE" />
    <result column="done_date" property="doneDate" jdbcType="DATE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="remark1" property="remark1" jdbcType="VARCHAR" />
    <result column="remark2" property="remark2" jdbcType="VARCHAR" />
    <result column="remark3" property="remark3" jdbcType="VARCHAR" />

      <!--t_demand_track.demand_id-->
      <result column="demand_id" property="demandIds" jdbcType="VARCHAR" />
      <result column="demand_name" property="demandNames" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, parent_id, demand_name, demand_des, work_load, demand_respo_id, demand_percent, 
    plan_date, done_date, create_time, create_user_id, update_time, update_user_id, remark1, 
    remark2, remark3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.adtec.daily.demand.entity.DemandDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_demand_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.adtec.daily.demand.entity.DemandDetailKey" >
    select 
    <include refid="Base_Column_List" />
    from t_demand_detail
    where id = #{id,jdbcType=INTEGER}
      and parent_id = #{parentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.adtec.daily.demand.entity.DemandDetailKey" >
    delete from t_demand_detail
    where id = #{id,jdbcType=INTEGER}
      and parent_id = #{parentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.adtec.daily.demand.entity.DemandDetailExample" >
    delete from t_demand_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.adtec.daily.demand.entity.DemandDetail" >
    insert into t_demand_detail (id, parent_id, demand_name, 
      demand_des, work_load, demand_respo_id, 
      demand_percent, plan_date, done_date, 
      create_time, create_user_id, update_time, 
      update_user_id, remark1, remark2, 
      remark3)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=VARCHAR}, #{demandName,jdbcType=VARCHAR}, 
      #{demandDes,jdbcType=VARCHAR}, #{workLoad,jdbcType=DECIMAL}, #{demandRespoId,jdbcType=VARCHAR}, 
      #{demandPercent,jdbcType=INTEGER}, #{planDate,jdbcType=DATE}, #{doneDate,jdbcType=DATE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=VARCHAR}, #{remark1,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR}, 
      #{remark3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.adtec.daily.demand.entity.DemandDetail" >
    insert into t_demand_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="demandName != null" >
        demand_name,
      </if>
      <if test="demandDes != null" >
        demand_des,
      </if>
      <if test="workLoad != null" >
        work_load,
      </if>
      <if test="demandRespoId != null" >
        demand_respo_id,
      </if>
      <if test="demandPercent != null" >
        demand_percent,
      </if>
      <if test="planDate != null" >
        plan_date,
      </if>
      <if test="doneDate != null" >
        done_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="remark1 != null" >
        remark1,
      </if>
      <if test="remark2 != null" >
        remark2,
      </if>
      <if test="remark3 != null" >
        remark3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="demandName != null" >
        #{demandName,jdbcType=VARCHAR},
      </if>
      <if test="demandDes != null" >
        #{demandDes,jdbcType=VARCHAR},
      </if>
      <if test="workLoad != null" >
        #{workLoad,jdbcType=DECIMAL},
      </if>
      <if test="demandRespoId != null" >
        #{demandRespoId,jdbcType=VARCHAR},
      </if>
      <if test="demandPercent != null" >
        #{demandPercent,jdbcType=INTEGER},
      </if>
      <if test="planDate != null" >
        #{planDate,jdbcType=DATE},
      </if>
      <if test="doneDate != null" >
        #{doneDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null" >
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        #{remark3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.adtec.daily.demand.entity.DemandDetailExample" resultType="java.lang.Integer" >
    select count(*) from t_demand_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_demand_detail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.demandName != null" >
        demand_name = #{record.demandName,jdbcType=VARCHAR},
      </if>
      <if test="record.demandDes != null" >
        demand_des = #{record.demandDes,jdbcType=VARCHAR},
      </if>
      <if test="record.workLoad != null" >
        work_load = #{record.workLoad,jdbcType=DECIMAL},
      </if>
      <if test="record.demandRespoId != null" >
        demand_respo_id = #{record.demandRespoId,jdbcType=VARCHAR},
      </if>
      <if test="record.demandPercent != null" >
        demand_percent = #{record.demandPercent,jdbcType=INTEGER},
      </if>
      <if test="record.planDate != null" >
        plan_date = #{record.planDate,jdbcType=DATE},
      </if>
      <if test="record.doneDate != null" >
        done_date = #{record.doneDate,jdbcType=DATE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark1 != null" >
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null" >
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark3 != null" >
        remark3 = #{record.remark3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_demand_detail
    set id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      demand_name = #{record.demandName,jdbcType=VARCHAR},
      demand_des = #{record.demandDes,jdbcType=VARCHAR},
      work_load = #{record.workLoad,jdbcType=DECIMAL},
      demand_respo_id = #{record.demandRespoId,jdbcType=VARCHAR},
      demand_percent = #{record.demandPercent,jdbcType=INTEGER},
      plan_date = #{record.planDate,jdbcType=DATE},
      done_date = #{record.doneDate,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR},
      remark3 = #{record.remark3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.adtec.daily.demand.entity.DemandDetail" >
    update t_demand_detail
    <set >
      <if test="demandName != null" >
        demand_name = #{demandName,jdbcType=VARCHAR},
      </if>
      <if test="demandDes != null" >
        demand_des = #{demandDes,jdbcType=VARCHAR},
      </if>
      <if test="workLoad != null" >
        work_load = #{workLoad,jdbcType=DECIMAL},
      </if>
      <if test="demandRespoId != null" >
        demand_respo_id = #{demandRespoId,jdbcType=VARCHAR},
      </if>
      <if test="demandPercent != null" >
        demand_percent = #{demandPercent,jdbcType=INTEGER},
      </if>
      <if test="planDate != null" >
        plan_date = #{planDate,jdbcType=DATE},
      </if>
      <if test="doneDate != null" >
        done_date = #{doneDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null" >
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        remark3 = #{remark3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and parent_id = #{parentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.adtec.daily.demand.entity.DemandDetail" >
    update t_demand_detail
    set demand_name = #{demandName,jdbcType=VARCHAR},
      demand_des = #{demandDes,jdbcType=VARCHAR},
      work_load = #{workLoad,jdbcType=DECIMAL},
      demand_respo_id = #{demandRespoId,jdbcType=VARCHAR},
      demand_percent = #{demandPercent,jdbcType=INTEGER},
      plan_date = #{planDate,jdbcType=DATE},
      done_date = #{doneDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR},
      remark3 = #{remark3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and parent_id = #{parentId,jdbcType=VARCHAR}
  </update>

    <!--联合表t_demand_track查询具体需求信息-->
    <select id="selectByDemandId" parameterType="com.adtec.daily.demand.entity.DemandDetail" resultMap="BaseResultMap">
        SELECT t1.demand_id demandIds, t1.demand_name demandNames, t2.parent_id, t2.demand_name demandName,
                t2.parent_id parentId, t2.demand_des demandDes, t2.work_load workLoad, t2.demand_respo_id demandRespoId,
                t2.demand_percent demandPercent, t2.plan_date planDate, t2.done_date doneDate, t2.create_time createTime,
                t2.create_user_id createUserId, t2.update_time updateTime, t2.update_user_id updateUserId
          FROM t_demand_detail t2
          LEFT JOIN t_demand_track t1 on t1.demand_id = t2.parent_id
        WHERE
            <![CDATA[
              t1.demand_id = #{demandIds,jdbcType=VARCHAR}
            ]]>
    </select>
</mapper>